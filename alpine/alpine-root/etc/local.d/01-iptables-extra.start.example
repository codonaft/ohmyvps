#!/bin/sh

NET_IFACE=$(netiface.sh)
ALLOWLIST="/etc/ssh/allowlist.txt"

## allow DHCP
#iptables -A INPUT -p udp --dport 68 -j ACCEPT
#ip6tables -A INPUT -p udp --dport 546 -j ACCEPT

# ratelimit ICMP
iptables -A INPUT -p icmp --icmp-type echo-request -m limit --limit 6/s -j ACCEPT
ip6tables -A INPUT -p icmpv6 --icmpv6-type echo-request -m limit --limit 6/s -j ACCEPT

iptables -A INPUT -i "${NET_IFACE}" -p icmp -s '66.220.2.74' -j ACCEPT # HE

for i in $(grepcidr -e '0.0.0.0/0' < "${ALLOWLIST}") ; do
  iptables -A INPUT -p icmp -s "$i" -j ACCEPT
done
for i in $(grepcidr -e '::/0' < "${ALLOWLIST}") ; do
  ip6tables -A INPUT -p icmpv6 -s "$i" -j ACCEPT
done

## allow ICMP traffic from all IPs
#iptables -A INPUT -p icmp -j ACCEPT
#ip6tables -A INPUT -p icmpv6 -j ACCEPT

## allow connections to ssh from all non-banned IPs
#[ -f /usr/sbin/sshd ] && {
#  for i in iptables ip6tables ; do
#    "$i" -A INPUT -p tcp --dport "${SSH_PORT}" -j ACCEPT
#  done
#}

# allow HTTP/HTTPS traffic from all IPs
[ -f /usr/sbin/nginx ] && {
  for ipt in iptables ip6tables ; do
    for p in 80 443 ; do
      "${ipt}" -A INPUT -p tcp --dport "$p" -j ACCEPT
    done
    "${ipt}" -A INPUT -p udp --dport 443 -j ACCEPT
  done
}

# allow HTTP/HTTPS traffic from Cloudflare IPs
{
  [ ! -f /var/tmp/cloudflare-ipv4.txt ] || [ ! -f /var/tmp/cloudflare-ipv6.txt ] && update-cloudflare-ips.sh || :

  for i in $(cat /var/tmp/cloudflare-ipv4.txt) ; do
    #iptables -A INPUT -s "$i" -j ACCEPT
    [ -f /usr/sbin/nginx ] && {
      for p in 80 443 ; do
        iptables -A INPUT -s "$i" -p tcp --dport "$p" -j ACCEPT
      done
      iptables -A INPUT -s "$i" -p udp --dport 443 -j ACCEPT
    }
  done

  for i in $(cat /var/tmp/cloudflare-ipv6.txt) ; do
    #ip6tables -A INPUT -s "$i" -j ACCEPT
    [ -f /usr/sbin/nginx ] && {
      for p in 80 443 ; do
        ip6tables -A INPUT -s "$i" -p tcp --dport "$p" -j ACCEPT
      done
      ip6tables -A INPUT -s "$i" -p udp --dport 443 -j ACCEPT
    }
  done
} &

[ -f /usr/bin/tor ] && {
  for ipt in iptables ip6tables ; do
    "${ipt}" -I INPUT -j ACCEPT -i lo -p tcp --dport 8118:9050 --sport 1:65000
    "${ipt}" -A OUTPUT -j ACCEPT -o lo -p tcp --dport 1:65000 --sport 8118:9050
    "${ipt}" -A OUTPUT -p tcp -j ACCEPT -m owner --uid-owner root -o lo
    "${ipt}" -A OUTPUT -p tcp -j ACCEPT -o "${NET_IFACE}" -m owner --uid-owner tor
  done
}

[ -f /usr/sbin/i2pd ] && {
  for ipt in iptables ip6tables ; do
    "${ipt}" -A OUTPUT -j ACCEPT -m owner --uid-owner i2pd
    # "${ipt}" -A INPUT -p udp --dport "${I2P_UDP}" -j ACCEPT
    # "${ipt}" -A OUTPUT -p udp --dport "${I2P_UDP}" -j ACCEPT
    "${ipt}" -I INPUT -j ACCEPT -i lo -p tcp --dport 7070:4444 --sport 1:65000
    "${ipt}" -A OUTPUT -j ACCEPT -o lo -p tcp --dport 1:65000 --sport 7070:4444
    "${ipt}" -A OUTPUT -p tcp -j ACCEPT -m owner --uid-owner root -o lo
    "${ipt}" -A OUTPUT -p tcp -j ACCEPT -o "${NET_IFACE}" -m owner --uid-owner i2pd
  done
}

[ -f /usr/bin/tinyproxy ] && {
  for ipt in iptables ip6tables ; do
    "${ipt}" -I INPUT -j ACCEPT -i lo -p tcp --dport 8889 --sport 1:65000
    "${ipt}" -A OUTPUT -j ACCEPT -o lo -p tcp --dport 1:65000 --sport 8889
    "${ipt}" -A OUTPUT -p tcp -j ACCEPT -m owner --uid-owner root -o lo
    "${ipt}" -A OUTPUT -p tcp -j ACCEPT -o "${NET_IFACE}" -m owner --uid-owner tinyproxy
  done
}

wait
