#!/usr/bin/env bash

(
  HARD_REBOOT="/tmp/hard_reboot"
  [ -e "${HARD_REBOOT}" ] || echo '
    #include <fcntl.h>
    #include <stdlib.h>
    #include <string.h>
    #include <unistd.h>
    #define REBOOT "b"
    int main() {
      int fd = open("/proc/sysrq-trigger", O_WRONLY | O_NOCTTY | O_SYNC);
      if (fd == -1) return 1;
      if (write(fd, REBOOT, strlen(REBOOT)) != strlen(REBOOT)) return 2;
      close(fd);
      return 0;
    }
  ' | gcc -static -x c -o "${HARD_REBOOT}" -

  tail -n1 -F /tmp/messages | \
    grep ': I/O error' | \
    while IFS=$'\n\t' read line ; do
      "${HARD_REBOOT}"
      break
    done
) &

# I wish fail2ban stopped breaking things and old configs would just keep working for ages =/
(
  touch "${SSH_ALLOWLIST}" "${SSH_BANLIST}"
  chmod 600 "${SSH_ALLOWLIST}" "${SSH_BANLIST}"

  ban() {
    ip="$1"
    iptables -I INPUT -p tcp --source "${ip}" --dport "${SSH_PORT}" -j DROP
  }

  if [ -e "${SSH_BANLIST}" ] ; then
    for ip in $(cat "${SSH_BANLIST}") ; do
      ban "${ip}"
    done
  fi

  tail -n1 -F /var/log/messages | \
    grep --line-buffered --extended-regexp 'sshd\[[0-9]*\]: (Connection closed by (invalid|authenticating) user.*\[preauth\]|Invalid user .* from .*)' | \
    grep --extended-regexp --line-buffered --only-matching '([0-9]{1,3}\.){3}[0-9]{1,3}' | \
    while IFS=$'\n\t' read ip ; do
      echo "${ip}" | grepcidr $(paste -sd ',' < "${SSH_ALLOWLIST}") >>/dev/null && logger "ignoring allowed IP ${ip}" || {
        logger "banning IP ${ip}"
        echo "${ip}" >> "${SSH_BANLIST}"
        ban "${ip}"
      }
    done
) &
