#!/bin/sh

NET_IFACE=$(netiface.sh)
ALLOWLIST="/etc/ssh/allowlist.txt"
LOCAL_BANLIST="/var/tmp/local-banlist.txt"

[ -f "${LOCAL_BANLIST}" ] && {
  for i in $(grepcidr -e '0.0.0.0/0' < "${LOCAL_BANLIST}") ; do
    iptables -A INPUT -s "$i" -j DROP
  done
  for i in $(grepcidr -e '::/0' < "${LOCAL_BANLIST}") ; do
    ip6tables -A INPUT -s "$i" -j DROP
  done
}

[ -f /usr/sbin/sshd ] && {
  SSH_PORT=$(sshport.sh)
  for i in $(grepcidr -e '0.0.0.0/0' < "${ALLOWLIST}") ; do
    iptables -A INPUT -i "${NET_IFACE}" -p tcp -s "$i" --dport "${SSH_PORT}" -j ACCEPT
  done
  for i in $(grepcidr -e '::/0' < "${ALLOWLIST}") ; do
    ip6tables -A INPUT -i "${NET_IFACE}" -p tcp -s "$i" --dport "${SSH_PORT}" -j ACCEPT
  done
}

# for ISPs that block traffic to standard DNS port
for i in 9.9.9.9 149.112.112.112 9.9.9.11 149.112.112.11 9.9.9.10 149.112.112.10 ; do
  iptables -t nat -A OUTPUT -p tcp -d "$i" --dport 53 -j DNAT --to-destination "$i:9953"
  iptables -t nat -A OUTPUT -p udp -d "$i" --dport 53 -j DNAT --to-destination "$i:9953"
done
for i in 2620:fe::fe 2620:fe::9 2620:fe::11 2620:fe::fe:11 2620:fe::10 2620:fe::fe:10 ; do
  ip6tables -t nat -A OUTPUT -p tcp -d "$i" --dport 53 -j DNAT --to-destination "$i:9953"
  ip6tables -t nat -A OUTPUT -p udp -d "$i" --dport 53 -j DNAT --to-destination "$i:9953"
done

for ipt in iptables ip6tables ; do
  "${ipt}" -A INPUT --in-interface lo -j ACCEPT

  # make sure NEW incoming tcp connections are SYN packets
  "${ipt}" -A INPUT -p tcp ! --syn -m state --state NEW -j DROP
  "${ipt}" -A INPUT -m conntrack --ctstate INVALID -j DROP

  # don't touch established connections
  "${ipt}" -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

  # disallow all incoming connections by default
  "${ipt}" -A INPUT -i "${NET_IFACE}" -j DROP
done
